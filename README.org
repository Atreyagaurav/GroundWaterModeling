* Groundwater Simulations Using Flopy

** Table of contents                                         :TOC:noexport:
- [[#groundwater-simulations-using-flopy][Groundwater Simulations Using Flopy]]
  - [[#introduction][Introduction]]
  - [[#contents][Contents]]
  - [[#declaimer][Declaimer]]
  - [[#notes][NOTES]]

** Introduction

[[https://github.com/modflowpy/flopy][Flopy]] is a python library which can interact with [[https://www.usgs.gov/software/modflow-6-usgs-modular-hydrologic-model][MODFLOW]] program for you. It can be used to make the models, the files and to do the postprocessing of the results from modeflow output.

In this repo there are 4 models written in python that does different things in flopy all involving some groundwater simulation scenarios, and are in increasing order of difficulties.

** Contents
These are the main scripts and instructions please go in order from first to last for better comprehension.

- [[./docs/0_installation.org][installation]] : How to install MODFLOW and Flopy
- [[./docs/1_github-model.org][github-model]] : A simple model to test flopy is installed.
- [[./docs/2_simple-model.org][simple-model]] : Simple Modflow model to get familiar with GW simulation.
- [[./docs/3_water-withdrawal-controversy.org][water-withdrawal-controversy]] : A little more complex model to get zone budget from simulation.
- [[./docs/4_calibration.org][calibration]] : Example for calibrating a model made in flopy using python.

The scripts are available in different formats, the original one is ~emacs org~ format in ~docs/~, which was used to tangle ~.py~ scripts in ~src/~, the org file was exported in ~.md~ format and that output was used to make the ~.ipynb~ (jupyter-notebook) files that are available in root. The notebooks are placed in project root to make it easier to run without having to symlink anything in subdirectories.

  
** Declaimer
The problem statements used in the modeling of this exercises comes from [[https://www.magnet4water.net/FeaturedProblems.aspx?CategoryId=47][magnet4water curriculum]]. Once all those problems were solved from the magnet website's cloud platform, same things was tried to achieved using flopy to compare the results as well as overall difficulties of making the models. I have no association with both and all of this was done for learning purposes.


** NOTES
The links for the plots and images in each org files does work in a PC but I think github doesn't yet support symlink navigation even if it can have symlink files in the repo, hence the links appear broken.

Do browse the [[./docs]] folder for final rendered pdfs which should have everything well formatted. And for running the code, if you use [[https://www.gnu.org/software/emacs/][gnu emacs]] then you can use the org files directly, as well as generate .py, .tex, .pdf from it (or just about any format I guess).

But if you don't I have tangled the source codes as python scripts in [[./src]] directory, and the .tex and .pdf are in [[./docs]] directory. The plots are in [[./images]] directory, which are used by and saved to there by all scripts whether in org files or not.

There are a couple of gnuplot scripts in [[./plots]] directory which can also be run for plotting data from calibration trials we get by running [[./src/4_batch.py]]. Make sure to run any scripts from the root directory, if not you may have to edit the paths in the scripts.
