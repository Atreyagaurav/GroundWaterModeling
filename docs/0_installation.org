# -*- org-export-use-babel: nil -*-
#+TITLE: Installing MODFLOW for Flopy
#+AUTHOR: Gaurav Atreya
#+LATEX_CLASS: unisubmission
#+LATEX_CLASS_OPTIONS: [titlepage,12pt]

#+OPTIONS: toc:nil

#+LATEX_HEADER: \ClassCode{GEOL 6024}
#+LATEX_HEADER: \ClassName{GroundWater Modeling}
#+LATEX_HEADER: \ActivityType{Project}
#+LATEX_HEADER: \SubmissionType{Report}
#+LATEX_HEADER: \SubmissionNumber{0}
#+LATEX_HEADER: \SubmissionName{Installing MODFLOW for Flopy}
#+LATEX_HEADER: \Author{Gaurav Atreya}
#+LATEX_HEADER: \Mnumber{M14001485}
#+LATEX_HEADER: \Keywords{Groundwater,Modeling,Flopy}

#+TOC: headlines 2
** Table of contents                                         :TOC:noexport:
- [[#how-to-install-modflow-for-flopy][How to install modflow for flopy]]
  - [[#download-as-zip][Download as zip]]
  - [[#compile-it-from-source-code][Compile it from source code]]
- [[#flopy-installation][Flopy installation]]
- [[#other-python-libraries][Other Python libraries]]
- [[#exporting-to-vtk][Exporting to vtk]]

* How to install modflow for flopy
  Flopy is a python program which only handles the input and output from modflow, so it doesn't have the capacity to do the simulation itself. Hence you need to tell it where to find the modflow program so it can send the files to that program.

** Download as zip
   You can download the zip files for modflow From here:
   https://www.usgs.gov/software/modflow-6-usgs-modular-hydrologic-model

   The current version of MODFLOW 6 is version 6.2.2, released July 30, 2021.

   The downloaded zip has following files when you unzip it.
#+begin_src bash
unzip -l ~/Downloads/mf6.2.2.zip 
#+end_src

#+begin_src text
  mf6.2.2/
|-- bin		# contains mf6.exe executable
|-- doc		# contains pdfs
|-- examples	# contains a lot of examples
|-- make	# contains make files
|-- msvs	# contains Visual Studio solution/project
|-- src		# conaints the fortran source codes
|-- srcbmi	# same as prev
`-- utils	# contains utility programs/codes
#+end_src

You only need the file ~mf6.exe~ in the ~/bin~ directory to connect to the flopy. 
  
** Compile it from source code
   You can compile the modflow code with fortran compiler to build the executables.

   Using pymake from modflowpy makes it a bit easier. You can read the instructions here:

   https://github.com/modflowpy/pymake


   Run this in your terminal to install pymake.
#+begin_src bash
pip install mfpymake  
#+end_src

Then use this code in python to build all the modflow apps.
#+begin_src python
import pymake

pymake.build_apps()
#+end_src

You can choose to build only modflow 6.

Read the instructions in github for more information on that. Or read the documentation at https://mfpymake.readthedocs.io/en/latest/

* Flopy installation
  To install flopy you can use pip.
  #+begin_src bash
pip install flopy
  #+end_src

  You can also install it through conda or similar package managers for python.

  For models using zonebudget, there is a bug in flopy version 3.3.5. [[https://github.com/modflowpy/flopy/issues/1395][I brought it to the attention of the developers and they've fixed it]]. But it's not yet available to the pip version 3.3.5. If the next version isn't yet released when you're running this code, then you can install the git's latest version with the following command.
  
  #+begin_src bash
pip install --upgrade git+https://github.com/modflowpy/flopy.git
  #+end_src


* Other Python libraries
To install all other libraries at once you can use the list in ~requirements.txt~ file.

Running this command in project root will install all requirements.
  #+begin_src bash
pip install -r requirements.txt
  #+end_src

  The contents of the file has following libraries:

- numpy: For numerical analysis, used mostly for cell/layer properties
- pandas: For reading/writing csv files
- flopy: main flopy library
- shapely: used for defining geometries and using GIS tools
- matplotlib: used for plotting
- scipy: for interpolation algorithm

The geopandas is optional, it's only used in data-gen for generating shapefiles (I think).
- geopandas: for reading writing shapefiles



* Exporting to vtk
To export to vtk format, you need a vtk python library as well as working vtk in your computer, it was a bit complicated to setup so I'm not putting this here, if you have used vtk files and paraview program before you can probably figure it out.

For me (Arch Linux) it was simple enough to setup as the vtk was available in official repository, so I could do ~sudo pacman -S vtk~. So depending on your OS you might have to find different ways. Please search it in the [[https://vtk.org/][official website of vtk]].
