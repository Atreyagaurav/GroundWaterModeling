* How to install modflow for flowpy
  Flopy is a python program which only handles the input and output from modflow, so it doesn't have the capacity to do the simulation itself. Hence you need to tell it where to find the modflow program so it can send the files to that program.
  
** Download as zip
   You can download the zip files for modflow From here:
   https://www.usgs.gov/software/modflow-6-usgs-modular-hydrologic-model

   The current version of MODFLOW 6 is version 6.2.2, released July 30, 2021.

   The downloaded zip has following files when you unzip it.
#+begin_src bash
unzip -l ~/Downloads/mf6.2.2.zip 
#+end_src

#+begin_src text
  mf6.2.2/
|-- bin		# contains mf6.exe executable
|-- doc		# contains pdfs
|-- examples	# contains a lot of examples
|-- make	# contains make files
|-- msvs	# contains Visual Studio solution/project
|-- src		# conaints the fortran source codes
|-- srcbmi	# same as prev
`-- utils	# contains utility programs/codes
#+end_src

You only need the file ~mf6.exe~ in the ~/bin~ directory to connect to the flopy. 
  
** Compile it from source code
   You can compile the modflow code with fortran compiler to build the executables.

   Using pymake from modflowpy makes it a bit easier. You can read the instructions here:

   https://github.com/modflowpy/pymake


   Run this in your terminal to install pymake.
#+begin_src bash
pip install mfpymake  
#+end_src

Then use this code in python to build all the modflow apps.
#+begin_src python
import pymake

pymake.build_apps()
#+end_src

You can choose to build only modflow 6.

Read the instructions in github for more information on that. Or read the documentation at https://mfpymake.readthedocs.io/en/latest/

* Introduction
  To install flopy you can use pip.
  #+begin_src bash
pip install flopy
  #+end_src

  
* Running a Test model
  
  #+begin_src python :session flopy-tutorial-1 :eval no-export
import flopy
import matplotlib.pyplot as plt
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
ws = './tutorial-1'
name = 'tutorial-1'
sim = flopy.mf6.MFSimulation(sim_name=name, sim_ws=ws, exe_name='modflow-mf6')
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
tdis = flopy.mf6.ModflowTdis(sim)
ims = flopy.mf6.ModflowIms(sim)
gwf = flopy.mf6.ModflowGwf(sim, modelname=name, save_flows=True)
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
dis = flopy.mf6.ModflowGwfdis(gwf, nrow=10, ncol=10)
ic = flopy.mf6.ModflowGwfic(gwf)
npf = flopy.mf6.ModflowGwfnpf(gwf, save_specific_discharge=True)
chd = flopy.mf6.ModflowGwfchd(gwf, stress_period_data=[[(0, 0, 0), 1.],
                                                       [(0, 9, 9), 0.]])
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
budget_file = name + '.bud'
head_file = name + '.hds'
oc = flopy.mf6.ModflowGwfoc(gwf,
                            budget_filerecord=budget_file,
                            head_filerecord=head_file,
                            saverecord=[('HEAD', 'ALL'), ('BUDGET', 'ALL')])
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
sim.write_simulation()
sim.run_simulation()
  #+end_src

  #+RESULTS:
  | True | nil |

  #+begin_src python :session flopy-tutorial-1
head = gwf.output.head().get_data()
bud = gwf.output.budget()

spdis = bud.get_data(text='DATA-SPDIS')[0]
qx, qy, qz = flopy.utils.postprocessing.get_specific_discharge(spdis, gwf)
  #+end_src

  #+RESULTS:

  #+begin_src python :session flopy-tutorial-1
pmv = flopy.plot.PlotMapView(gwf)
pmv.plot_array(head)
pmv.plot_grid(colors='white')
pmv.contour_array(head, levels=[.2, .4, .6, .8], linewidths=3.)
pmv.plot_vector(qx, qy, normalize=True, color="white")
  #+end_src

  #+RESULTS:
  : <matplotlib.quiver.Quiver object at 0x7f11ed0c9510>

  #+begin_src python :session flopy-tutorial-1
plt.savefig("./images/tutorial-1.png")
  #+end_src

  #+RESULTS:
  : None

  [[./images/tutorial-1.png]]


  
* Tutorial 2: Water withdrawal Controversy

  SUMMARY:

  Prairie Valley Water is installing a high-capacity well to support their expanded bottled water operations. But the company's permit is denied by the state because the state’s water withdrawal assessment tool predicted that their proposed well could adversely impact the nearby trout stream. The company argues that their well will pump deep groundwater which will have no impact on what happens at the surface. You be the judge…should Prairie Valley Water get a permit?

  [[./images/tutorial-2-site.png]]
